package com.example.account_service.services;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.example.account_service.audit.ApiCallLogService;
import com.example.account_service.dto.OrinocoCasePayload;
import com.example.account_service.util.RestClientUtilDummy;
import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class OrinocoCaseManagementService {

    private final RestClientUtilDummy restClientUtil;
    private final ApiCallLogService apiCallLogService;
    private final ObjectMapper objectMapper = new ObjectMapper();

    @Autowired
    public OrinocoCaseManagementService(RestClientUtilDummy restClientUtil, ApiCallLogService apiCallLogService) {
        this.restClientUtil = restClientUtil;
        this.apiCallLogService = apiCallLogService;
    }

    /**
     * Notify the back office through Orinoco Case Management API.
     *
     * @param requestContext The complete request context.
     * @param errorMessage   The error message describing the failure.
     * @return Case ID generated by the system.
     */
    public String notifyBackOffice(Map<String, Object> requestContext, String errorMessage) {
        OrinocoCasePayload casePayload = OrinocoCasePayload.createFromContext(requestContext, errorMessage);
        String caseId = casePayload.getCaseId();
        String transactionId = (String) requestContext.get("transactionId");
        String productCode = (String) requestContext.get("productCode");
        String fkn = (String) requestContext.get("fkn");

        String jsonPayload = ""; // Initialize outside try-catch
        try {
            String jsonString = objectMapper.writeValueAsString(casePayload); // Serialization inside try

            log.info("Notifying Orinoco Case Management system with payload: {}", jsonPayload); // Log the JSON

            ResponseEntity<String> response = restClientUtil.makeCaseManagementCall(
                    "https://orinoco.api/case-management",
                    Map.of("case", casePayload)
            );
            String responseBody = response.getBody();
            String statusCode = response.getStatusCode().toString();

            apiCallLogService.logApiResponse(transactionId, "orinoco-case-management", fkn,
                    productCode, statusCode, jsonString, responseBody);

            if (response.getStatusCode().is2xxSuccessful()) {
                log.info("Successfully notified Orinoco Case Management. Case ID: {}", caseId);
                return caseId;
            } else {
                log.error("Failed to notify Orinoco Case Management: {}, Response: {}", response.getStatusCode(),
                        responseBody);
                return "ERROR-CASE"; // Or a more informative error message/code
            }
        } catch (Exception ex) {

           // apiCallLogService.logApiResponse(transactionId, "orinoco-case-management", fkn,
           //         productCode, "API_ERROR", jsonPayload, ex.getMessage()); // Use the pre-serialized JSON if possible.

            log.error("Error notifying Orinoco Case Management. Case ID: {}, Error: {}", caseId, ex.getMessage(), ex);
            return "ERROR-CASE"; // Or a more informative error message/code
        }
    }
}
